Devin Dennis - SSH Key file formats

-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----


ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDEaP/mMYkWEPVzXeukPGNWJu8749pdkP+taq5YdCPf4imtDWjKzJPar/ifKwcZPORsR5fWFJ22OkrqFc45Mw83+stvQSfayqeswVpE0yXawhQWWlPVPdBapgVlu9lew9MTGwsTCG4aXrAPBcAb/JhW/qXsQQVAmKezGHDgPG+TjFCYXpBXLar+iD2EeKrMNta0n9TuXChBuqYpFJoA8aAy+d0Irukti+XSGnqzj8RH67f/zGT7xoZbAQZlDdZ9HQsw9Ms/nAY8VDfsYxKjRp0PHUMBN5vFCUwfjYo2GkJ46OknZiWG4KX9fHAdG4ZRxsbrJQ1otaf6v2NgqyE3yCIHOhumGkZNfbg55Y2MVVpFzsgZy7zSdfNeNsmzF7q4sc4DUTMuYwL+WtV46nKie00wis2+l/1VdjV21x+m08X0utpNlnl4TLh7hNT7p9lM2ZrJjKwHIYVcm1mHPuaaLO3mfVfWG/lIz4vVMgdRmKW7ku1DNkHIk+28XAQcOWGHNG8= kali@kali


=========== Private Key ===========

I used Lapo Luchini's ASN.1 decoder to see the different hex numbers for each Int. It was decoded into this format:

RSAPrivateKey ::= SEQUENCE {
    version           Version,
    modulus           INTEGER,  -- n
    publicExponent    INTEGER,  -- e
    privateExponent   INTEGER,  -- d
    prime1            INTEGER,  -- p
    prime2            INTEGER,  -- q
    exponent1         INTEGER,  -- d mod (p-1)
    exponent2         INTEGER,  -- d mod (q-1)
    coefficient       INTEGER   -- (inverse of q) mod p
}

The first int is the RSA key version number is the hex dump.
Value: 0

The next int is the modulus. it's the number corresponding to p * q.
Value: (3072 bit)


publicExponent is the e integer corresponding with the public key pair (e, n).
Value: 65537

privateExponent is the d integer correspoding with the private key pair (d, n).
Value: (3071 bit)


prime 1 is the first prime number for n. 
Value: (1536 bit)
2179481459079847200457462068222250390729564649916979724856599658668080747946280129335211065668822440632374896184654414683818071359205645759056878794122269894230689741831814741386338935799562448320744027969452316791537965286478776526511584897072365816222692219920783515116428347403451876902176724559162516107126274829383232061969382416532642683248029612915014413263347099735409303443109053844594719396348047554600360138328138490165137963109792386653053773288199127

prime 2 is the first prime number for n.
Value: (1536 bit)
2045113772238155138978523122385793300247845576021990654528568403933394884463412034578078630646066671362714065157886077928684022823371749264798574401756109554401154178105136785040592111669428110494411470563192657145475495592253993539120718431557044409721261313218319890518157156634925783244917481850387349248262088733584012465267544406057167550718614701769517563404210767740405012797347333274861676980510429900459031797495463518407452323698902045956949258866626857

exponent1 is for modular exponentation mod p instead of n
Value: (1536 bit)
1739774059413189592015687750416513254970736754206124697588736303816479917127876542505326256930656666946651398353604768362664485758530957442132850361086203969004967176464155945429701106647452728747115733451666966033680343225386227535353366249452077722136962990145349796196285289140662296719980703195333735601939531374630876990431790303506495597511644860149976029263957818067014628524745565892243659996947496953154978724028206434731360796803161400548613884516717843

exponent2 is for modular expenetation mod q instead of n
Value: (1533 bit)
247927566419459886463896214464426625730032395463550601190617147096309296383139426808105874856691635320151414432754091416198400313283924316169868526511013479556848344371047068940407774649642283563149047616225424737488789729167614914755239146416844192368210646406145406871946512801386779191614956334609876707469708637690540901117699014390713584547040508499913286254275516878977033228175298882597250768423262669318812390422226492725440723740601137603612644181078633

coefficient is the q^-1 mod p which is used for speeding up the calculations.
Value: (1534 bit)
518201030915888337110614659313086990439382672191907744839216511998007751496441470199038547198929619799565266571081225117011983579046449092261777790201312893636582128969542490663833893277820663620137285018814890929997179888336060611282675921015182917441279023398311574330866718026564501310657989606398694065419845436321147696116180443594128961599965979770592178857730592131335212901359892819410052625603932807318867393429047480600784795549816303183867154924702357


=========== Public key ==============

First I needed to convert the openssh public key into a pem file. using this command:

ssh-keygen -f id_rsa_homework.pub -e -m PEM > id_rsa_homework.pem

Then I was able to get it into this format:

-----BEGIN RSA PUBLIC KEY-----
MIIBigKCAYEAxGj/5jGJFhD1c13rpDxjVibvO+PaXZD/rWquWHQj3+IprQ1oysyT
2q/4nysHGTzkbEeX1hSdtjpK6hXOOTMPN/rLb0En2sqnrMFaRNMl2sIUFlpT1T3Q
WqYFZbvZXsPTExsLEwhuGl6wDwXAG/yYVv6l7EEFQJinsxhw4Dxvk4xQmF6QVy2q
/og9hHiqzDbWtJ/U7lwoQbqmKRSaAPGgMvndCK7pLYvl0hp6s4/ER+u3/8xk+8aG
WwEGZQ3WfR0LMPTLP5wGPFQ37GMSo0adDx1DATebxQlMH42KNhpCeOjpJ2YlhuCl
/XxwHRuGUcbG6yUNaLWn+r9jYKshN8giBzobphpGTX24OeWNjFVaRc7IGcu80nXz
XjbJsxe6uLHOA1EzLmMC/lrVeOpyontNMIrNvpf9VXY1dtcfptPF9LraTZZ5eEy4
e4TU+6fZTNmayYysByGFXJtZhz7mmizt5n1X1hv5SM+L1TIHUZilu5LtQzZByJPt
vFwEHDlhhzRvAgMBAAE=
-----END RSA PUBLIC KEY-----

When using the ASN.1 decoder I got it into this format:

RSAPublicKey ::= SEQUENCE {
    modulus: (3072 bit)

    publicExponent: 65537
}


There was only the modulus n which is p * q and publicExponent e which corresponding with the (e, n) public key pair.


============= Sanity Check ===============

I wrote a script in rsa-check.py that takes the values from the public and private keys to verify that they keys share the RSA relationship. If you run the script it will reuturn True for e*d mod lamda(n) = 1.


